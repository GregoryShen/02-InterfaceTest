14.40 应用层和http协议



14.9 requests 中的会话

1. cookie和session的定义？以及他们的区别
2. 如果响应中含有cookies，如何读取？给出示例代码
3. 如果想在请求中添加cookies，如何操作？ url=http://httpbin.org/cookies
4. 如何把RequestCookieJar 添加到请求中？ 给出示例代码 url=http://httpbin.org/cookies
5. 如何在requests中使用会话？给出示例代码？ 也就是如何证明session的功能？
   就是可以在不同请求中确认服务器记住了我们的cookie
   设置cookie：http://httpbin.org/cookies/set/{name}/{value} (GET 请求)
   查看当前请求携带的cookie：http://httpbin.org/cookies (GET 请求)



16.07 接口测试的测试理论

01. 软件测试的基本问题有哪些?

01. 什么情况下需要考虑使用接口测试？
02. 在快速迭代开发的项目过程中如何落地接口测试？
03. 什么情况下不用做接口测试？
04. 接口测试的策略？ 具体的两类策略细节？
05. 判断一个问题是不是bug的依据有哪些?
06. 判断一个迭代的测试有没有通过的依据?
07. 如何对这个系统进行穷尽的测试?
08. 不能做穷尽的测试, 那么要测多少才够?
09. 接口测试测试用例的设计原则?
10. 接口测试测试用例的设计依据?
11. 设计接口测试用例的一般步骤?
12. 接口测试特有的测试场景?

16.10 接口测试框架设计
1. 描述一个自动化测试框架在单机上运行时的过程，并画图表示
2. 在上述图示中圈出测试框架

16.20 接口测试框架设计2
1. TUGithubAPI和TUGithubAPITest分别是用来做什么的，二者的关系请画图说明
2. 解释关键字和脚本的概念

16.30 项目开始前的准备
1. 解释master、release、integration、dev、hotfix、teach分支的含义
2. 本项目作为开源项目的管理模式

16.35 代码的下载和提交
1.

16.40 Rest请求客户端
1. 实现本项目中的 Rest 请求客户端
2. 说明 RestClient 类里出现的各种 HTTP 方法的含义和区别
3. 写一段脚本, 使用 RestClient 向 github.com 的首页发送 get 请求

16.50 通过接口登录Github
1. 在 rest_client 中添加登录方式信息
2. 封装查看所有repos的接口，接口地址：https://docs.github.com/en/rest/reference/repos#list-repositories-for-the-authenticated-user
3. 调用2中的接口查看结果

16.60 封装一个 Get 请求
1. 封装一个接口: 接口地址: https://docs.github.com/en/rest/reference/repos#list-repositories-for-the-authenticated-user
   封装要求：将参数封装在接口地址里，然后对这个接口进行单个参数的测试
2. 按照文档设计更多的输入参数, 对这个接口做测试, 尽可能多的覆盖各种输入组合以及正常和异常场景

16.70 进一步思考 Get 请求的封装请求的封装
1. 说明16.6 中的接口封装方式有什么问题，并改为通用的格式并调用
2. 这个项目中基础封装的原则
3. 按照基础封装的原则封装两个接口, 并调用它
文档地址: https://docs.github.com/en/rest/reference/repos#list-organization-repositories
https://docs.github.com/en/rest/reference/repos#list-public-repositories

16.80 封装更多类型的请求
1. 封装 repositories 中的其他接口
创建: https://docs.github.com/en/rest/reference/repos#create-a-repository-for-the-authenticated-user
获取: https://docs.github.com/en/rest/reference/repos#get-a-repository
编辑: https://docs.github.com/en/rest/reference/repos#update-a-repository
2. 调用这些接口验证功能

16.90 在项目实战中提交代码


16.100 TUGithubAPI 项目的介绍的补充
1. 给你一个网站接口项目要你测, 你怎么测?
2. 你的框架怎么设计, 有哪些模块?
3. 介绍一下你以前做过的项目里是怎么做这些模块的?

16.110 接口封装层设计的改进
1. 使用list_clones查询你自己名下的某个代码仓库在最近14天里每天的被clone次数。注：只需要修改reponame和username即可。并把token改成可用的token。

16.120 关键字层的封装
1. 封装关键字创建repo
2. 关键字的参数扩展
3. 关键字的结果返回
4. 关键字的调用和断言

